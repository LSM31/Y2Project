public class MarkovMethods {
    private double[][] transitionMatrix = { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0.076923077,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0,0,0,0},
                                            {0.307692308,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0,0,0},
                                            {0.076923077,0.307692308,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0,0},
                                            {0,0.076923077,0.307692308,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0,0},
                                            {0,0,0.076923077,0.307692308,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0,0},
                                            {0,0,0,0.076923077,0.307692308,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0,0},
                                            {0,0,0,0,0.076923077,0.307692308,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0,0},
                                            {0,0,0,0,0,0.076923077,0.307692308,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0,0,0},
                                            {0,0,0,0,0,0,0.076923077,0.307692308,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,0.076923077,1,0},
                                            {0,0,0,0,0,0,0,0,0.307692308,0.384615385,0.461538462,0.538461538,0.615384615,0.692307692,0.769230769,0.846153846,0.923076923,0,1},
        };
    
    public double[][] tMatrix(){
        return transitionMatrix;
    }

    public double[] tMatrixMultiply(double[][] tMatrix, double[] currentState){

        double[] result = new double[19];
        int index = 0;

        for(double[] row : tMatrix){
            double dotProduct = 0;
            for(int i = 0; i < 19; i++){
                dotProduct += row[i] * currentState[i];
            }
            result[index] = dotProduct;
            index++;
        }


        return result;
    }
}
